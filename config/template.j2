/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_Gator_Params_{{ Timeframe }} : GatorParams {
  Indi_Gator_Params_{{ Timeframe }}() : GatorParams(indi_gator_defaults, PERIOD_{{ Timeframe }}) {
    applied_price = (ENUM_APPLIED_PRICE){{ Gator_Indi_Gator_Applied_Price | default(0) }};
    jaw_period = {{ Gator_Indi_Gator_Period_Jaw | default(0) }};
    jaw_shift = {{ Gator_Indi_Gator_Shift_Jaw | default(0) }};
    lips_period = {{ Gator_Indi_Gator_Period_Lips | default(0) }};
    lips_shift = {{ Gator_Indi_Gator_Shift_Lips | default(0) }};
    ma_method = (ENUM_MA_METHOD){{ Gator_Indi_Gator_MA_Method | default(0) }};
    shift = {{ Gator_Indi_Gator_Shift | default(0) }};
    teeth_period = {{ Gator_Indi_Gator_Period_Teeth | default(0) }};
    teeth_shift = {{ Gator_Indi_Gator_Shift_Teeth | default(0) }};
  }
} indi_gator_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_Gator_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_Gator_Params_{{ Timeframe }}() : StgParams(stg_gator_defaults) {
    lot_size = {{ Gator_LotSize | default(0) }};
    signal_open_method = {{ Gator_SignalOpenMethod | default(0) }};
    signal_open_filter = {{ Gator_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ Gator_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ Gator_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ Gator_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ Gator_SignalCloseLevel | default(0) }};
    price_stop_method = {{ Gator_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ Gator_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ Gator_TickFilterMethod  | default(1) }};
    max_spread = {{ Gator_MaxSpread | default(0) }};
  }
} stg_gator_{{ Timeframe | lower }};
